version: '3.8'

services:
  # Infrastructure Services
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: kahaniyaa
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Microservices
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: kahaniyaa-gateway
    ports:
      - "8000:8000"
    environment:
      - AUTH_SERVICE_URL=http://auth-service:8001
      - STORY_SERVICE_URL=http://story-service:8002
      - TTS_SERVICE_URL=http://tts-service:8003
      - VISION_SERVICE_URL=http://vision-service:8004
    depends_on:
      - auth-service
      - story-service
      - tts-service
      - vision-service
    volumes:
      - ./.env:/app/.env
    restart: unless-stopped

  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: kahaniyaa-auth
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/kahaniyaa
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-change-in-production}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./.env:/app/.env
    restart: unless-stopped

  story-service:
    build:
      context: ./services/story-service
      dockerfile: Dockerfile
    container_name: kahaniyaa-story
    ports:
      - "8002:8002"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/kahaniyaa
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AUTH_SERVICE_URL=http://auth-service:8001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./.env:/app/.env
    restart: unless-stopped

  tts-service:
    build:
      context: ./services/tts-service
      dockerfile: Dockerfile
    container_name: kahaniyaa-tts
    ports:
      - "8003:8003"
    environment:
      - AZURE_SPEECH_KEY=${AZURE_SPEECH_KEY}
      - AZURE_SPEECH_REGION=${AZURE_SPEECH_REGION}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./.env:/app/.env
      - tts_audio:/app/audio
    restart: unless-stopped

  vision-service:
    build: ./services/vision-service
    container_name: kahaniyaa_vision_service
    ports:
      - "8004:8000"
    environment:
      - AZURE_VISION_KEY=${AZURE_VISION_KEY}
      - AZURE_VISION_ENDPOINT=${AZURE_VISION_ENDPOINT}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - kahaniyaa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build: ./frontend
    container_name: kahaniyaa_frontend
    ports:
      - "3000:80"
    environment:
      - API_BASE_URL=/api
      - APP_NAME=Kahaniyaa
      - APP_VERSION=1.0.0
      - ENVIRONMENT=production
    depends_on:
      - api-gateway
    networks:
      - default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  postgres_data:
  tts_audio:
  vision_uploads:

networks:
  kahaniyaa-network:
    driver: bridge
